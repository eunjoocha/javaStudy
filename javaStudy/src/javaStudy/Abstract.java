package javaStudy;

public class Abstract {
//	추상화
//	중요한 것은 남기고, 불필요한 것은 제거한다.
//
//	앞으로 프로그램을 만들 때 비즈니스 영역(도메인 영역)에 맞도록 추상하ㅗ를 해야한다.
//	먼 미래까지 대비해서 클래스를 만들 필요는 없다.
//	필요한 정보만 가지도록 하고, 기능도 필요한 것만 가지도록 한다.
//	이것을 추상화라고 한다.
//
//	캡슐화
//	관련된 것을 잘 모아서 가지고 있는 것을 캡슐화라고 한다.
//	관련된 것을 잘 모아서 가지고 있을수록 응집도가 높다고 표현한다.
//
//	캡슐화는 은닉화와도 관련 있다.
//	은닉화는 접근 제한자에 대해 배우면서 다룬다.
//	
//	좋은 객체는 응집도는 높고 결합도는 낮다.
//	자바는 클래스 지향이 아닌 객체 지향이다.
//	클래스가 설계도라면 이 클래스가 인스턴스가 되어 메모리에 올라갔을 때 이것을 객체라고 한다.
//
//	응집도가 높다? 객체는 책임을 가지고 있다.
//	관련된 기능을 잘 모아서 가지고 있는 것을 응집도가 높다라고 이야기한다.
//	객체를 만들 때 관련된 기능을 잘 모아서 가지고 있어야 하고, 객체와 객체간에는 결합도는 낮춰야 한다.
}
