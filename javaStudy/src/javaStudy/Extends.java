package javaStudy;

public class Extends {

	// 상속 선언 방법
	// [접근제한자] [abstract | final] class 클래스명 extends 부모클래스명 {
	// }
	
	// 아무것도 상속받지 않으면 자동으로 java.lang.Object를 상속 받는다.
	// 모든 클래스는 Object의 자손이다.
	
	// 부모 타입으로 자손 타입을 참조할 수 있다.
	// 버스는 자동차다.
	// Car car = new Bus();
	// Bus 인스턴슬르 생성
	// 지금까지는 참조 타입이 인스턴스 타입과 같았는데 지금은 다르다.
	// Bus 인스턴스가 만들어졌는데 실제 참조는 Car 타입으로 하라는 의미다.
	// 버스를 "자동차다"라고 하는 것은 맞는 표현이다.
	// 컴파일 오류가 발생하지 않는다면 Bus는 Car의 자식이다.
	// Bus bus = new Bus();여도 되는데 왜 참조 타입을 부모 타입으로 사용할까?
	// 내가 운전하는 것은 버스인데 자동차의 기본 기능만 이용하려면 Car car = new Bus(); 로 선언
	// 메모리에 올라간 인스턴스는 Bus지만 참조 변수를 이용해 사용할 수 있는 메소드는 Car의 메소드
	// 참조 변수의 타입만 보면 이런 메소드만 사용하겠구나 라고 알게 되니 코드를 분석할 때 쉬워진다.
	// Bus의 모든 기능을 사용해야 할 경우에는 참조 변수의 타입을 Bus로 해야한다.
	
}
